/*****************************************************************************
 *
 * Copyright 2019 NXP
 * All Rights Reserved
 *
 *****************************************************************************
 *
 * THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

#ifdef APEX2_EMULATE
  #include "apu_lib.hpp"
  #include "apu_extras.hpp"
  #include "acf_lib.hpp"
  using namespace APEX2;
#else
  #include "apex.h"
#endif

#include "test_acf_host.h"

int main(int, char **)
{
    
    /* This is needed only for the Target Compiler HW and resources init */
    APEX_Init();

/**********************************************************************
    The TEST_CALL is placeholder for calling the graph.
    The definition of TEST_CALL is generated by graph tool to perform
    all the manipulations with created process.
    The user can change this code using other methods for process manipulation
    generated by graph tool.
**********************************************************************/
	TEST_CALL();

    return 0; 
}

#include "sdi.hpp"

/**********************************************************************
    The io_config is placeholder for calling the initialization of Input/Output.
    io_config is called from the code generated by graph tool.
    The user should add the code to execute all steps to initialize
    DDR buffers.
**********************************************************************/
void io_config(sdi_grabber *lpGrabber)
{
   /* Insert the code to initialize  DDR buffers */
}

/**********************************************************************
   The camera_config is placeholder for calling the initialization of camera.
   camera_config is called from the code generated by graph tool.
   The user should add the code to execute all steps to initialize
   the camera installed in his board.
**********************************************************************/
void camera_config()
{
   /* Insert the code to initialize  the camera */
}
